from telebot import types
import telebot
import mysql.connector
from mysql.connector import connect, Error
from os import getenv
from dotenv import load_dotenv

load_dotenv('data.env')  # –ó–∞–≥—Ä—É–∑–∫–∞ .env —Ñ–∞–π–ª–∞

print(getenv('HOST'),
      getenv('USER'),
      getenv('DATABASE'),
      getenv('PASSWORD'))  # –ü—Ä—Ä–æ–≤–µ—Ä–∫–∞ —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è .env

diet_bot = telebot.TeleBot('7084126348:AAEvTraP1V0dktqmDg-h9VSphWqx3P9fY4M')
diet = {}
questions = ['‚ùî–í–æ–ø—Ä–æ—Å 1 –∏–∑ 12:\n'
             '–ú–æ–∂–Ω–æ –ª–∏ –≤–∞–º –º–æ–ª–æ—á–Ω—É—é –ø—Ä–æ–¥—É–∫—Ü–∏—é?',
             '‚ùî–í–æ–ø—Ä–æ—Å 2 –∏–∑ 12:\n'
             '–ú–æ–∂–Ω–æ –ª–∏ –≤–∞–º –∂–∏—Ä–Ω—ã–µ –≤–∏–¥—ã –º—è—Å–∞ –∏–ª–∏ —Ä—ã–±—ã?',
             '‚ùî–í–æ–ø—Ä–æ—Å 3 –∏–∑ 12:\n'
             '–ú–æ–∂–Ω–æ –ª–∏ –≤–∞–º —Å–ª–∞–¥–∫–æ–µ?',
             '‚ùî–í–æ–ø—Ä–æ—Å 4 –∏–∑ 12:\n'
             '–ú–æ–∂–Ω–æ –ª–∏ –≤–∞–º –æ—Å—Ç—Ä–æ–µ?',
             '‚ùî–í–æ–ø—Ä–æ—Å 5 –∏–∑ 12:\n'
             '–ú–æ–∂–Ω–æ –ª–∏ –≤–∞–º –±–æ–±–æ–≤—ã–µ –∫—É–ª—å—Ç—É—Ä—ã?',
             '‚ùî–í–æ–ø—Ä–æ—Å 6 –∏–∑ 12:\n'
             '–ú–æ–∂–Ω–æ –ª–∏ –≤–∞–º –æ–≤–æ—â–∏?',
             '‚ùî–í–æ–ø—Ä–æ—Å 7 –∏–∑ 12:\n'
             '–ú–æ–∂–Ω–æ –ª–∏ –≤–∞–º —Ö–ª–µ–±–æ–±—É–ª–æ—á–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è (–≤—ã–ø–µ—á–∫–∞)?',
             '‚ùî–í–æ–ø—Ä–æ—Å 8 –∏–∑ 12:\n'
             '–ú–æ–∂–Ω–æ –ª–∏ –≤–∞–º –≥—Ä–∏–±—ã?',
             '‚ùî–í–æ–ø—Ä–æ—Å 9 –∏–∑ 12:\n'
             '–ú–æ–∂–Ω–æ –ª–∏ –≤–∞–º –∫–æ—Ñ–µ?',
             '‚ùî–í–æ–ø—Ä–æ—Å 10 –∏–∑ 12:\n'
             '–ú–æ–∂–Ω–æ –ª–∏ –≤–∞–º –∫–æ–ø—á—ë–Ω–æ—Å—Ç–∏/–∫–æ–ª–±–∞—Å–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è?',
             '‚ùî–í–æ–ø—Ä–æ—Å 11 –∏–∑ 12:\n'
             '–ú–æ–∂–Ω–æ –ª–∏ –≤–∞–º –º–∞—Ä–∏–Ω–æ–≤–∞–Ω–Ω—É—é –ø—Ä–æ–¥—É–∫—Ü–∏—é?',
             '‚ùî–í–æ–ø—Ä–æ—Å 12 –∏–∑ 12:\n'
             '–ú–æ–∂–Ω–æ –ª–∏ –≤–∞–º —Å–æ—É—Å—ã?'
             ]

tables = {'1': [True, False, False, False, True, True, True, True, False, True, True, True],
          '2': [False, False, False, True, False, True, False, True, True, False, True, True],
          '3': [False, False, True, True, True, True, True, True, True, True, False, True],
          '4': [False, False, True, True, False, False, False, True, False, True, False, True],
          '5': [True, False, True, True, True, False, False, True, False, True, True, True],
          '6': [True, False, False, False, False, True, True, False, True, True, True, True],
          '7': [True, False, False, False, False, True, False, False, True, False, True, True],
          '8': [False, False, False, True, True, True, True, True, True, False, False, False],
          '9': [True, False, False, True, False, True, False, False, True, True, False, True],
          '10': [True, False, False, True, False, True, False, False, True, True, False, True],
          '11': [True, False, False, False, True, True, True, True, False, False, True, False],
          '12': [True, False, True, False, True, True, False, True, True, False, False, False],
          '13': [True, False, True, False, False, False, True, False, True, False, True, True],
          '14': [False, False, False, True, True, False, True, True, True, False, False, True],
          '15': [True, False, True, False, True, True, True, True, False, True, True, False]}


@diet_bot.message_handler(commands=['start', 'help'])
def login(message):
    info = f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}. –ù–∞—à –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –º–µ–Ω—é, –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –ø–æ–¥ –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è. –ü–æ—ç—Ç–æ–º—É –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å, –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –º—ã –ø–æ–¥–±–µ—Ä—ë–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –±–ª—é–¥–∞.'
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton(text='–ù–∞—á–∞—Ç—å', callback_data='login'))

    diet_bot.send_message(message.chat.id, info, reply_markup=markup)


@diet_bot.callback_query_handler(func=lambda callback: True)
def login_proc(callback):  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–¥
    global mess_id
    if callback.data == 'login':
        try:
            # –ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–¥
            with connect(
                    host=getenv('HOST'),
                    user=getenv('USER'),
                    database=getenv('DATABASE'),
                    port=getenv('PORT'),
                    password=getenv('PASSWORD')
            ) as connection:
                user_avail = f'''SELECT * FROM users WHERE User_ID = {callback.from_user.id}'''
                with connection.cursor() as cursor:
                    cursor.execute(user_avail)
                    avail = cursor.fetchall()
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, —Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ –µ–≥–æ –Ω–æ–º–µ—Ä –∏ –µ–≥–æ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            if avail == []:
                sql_login = "INSERT INTO users (User_ID, Firstname, Surname, Table_number_id, Question_number, Answer_variant_id) VALUES (%s, %s, %s, %s, %s, %s)"
                sql_answs = "INSERT INTO answer_variant (User_answer_ID) VALUE (%s)"  # %s - –ø–∞—Ä–∞–º–µ—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ
                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–¥ –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                with connect(
                        host=getenv('HOST'),
                        user=getenv('USER'),
                        database=getenv('DATABASE'),
                        password=getenv('PASSWORD')
                ) as connection:
                    with connection.cursor() as cursor:
                        cursor.execute(sql_answs, (
                        callback.from_user.id,))  # –ü–µ—Ä–µ–¥–∞—á–∞ –∑–Ω–∞—á–µ–Ω–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ –ø–æ—Ä—è–¥–∫—É –∏—Ö —É–ø–æ–º–∏–Ω–∞–Ω–∏—è
                        connection.commit()
                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                with connect(
                        host=getenv('HOST'),
                        user=getenv('USER'),
                        database=getenv('DATABASE'),
                        password=getenv('PASSWORD')
                ) as connection:
                    with connection.cursor() as cursor:
                        cursor.execute(sql_login, (
                        callback.from_user.id, callback.from_user.first_name, callback.from_user.last_name, 16, 0,
                        callback.from_user.id))
                        connection.commit()

                markup_menu = types.InlineKeyboardMarkup()
                markup_menu.add(types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–Ω—éüçΩÔ∏è', callback_data='menu'))

                markup_poll = types.ReplyKeyboardMarkup(resize_keyboard=True)
                markup_poll.add(types.KeyboardButton(text='–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç‚úÖ'))

                diet_bot.send_message(callback.message.chat.id, '–ï—Å–ª–∏ –≤—ã —É–∂–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ —Ç–µ—Å—Ç:', reply_markup=markup_menu)
                diet_bot.send_message(callback.message.chat.id,
                                      '–ò–ª–∏ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–π—Ç–∏ –µ–≥–æ, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–πÔ∏èüëá',
                                      reply_markup=markup_poll)
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å, —Ç–æ –µ–º—É —Å—Ä–∞–∑—É –≤—ã–≤–æ–¥—è—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º
            else:
                markup_menu = types.InlineKeyboardMarkup()
                markup_menu.add(types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–Ω—éüçΩÔ∏è', callback_data='menu'))

                markup_poll = types.ReplyKeyboardMarkup(resize_keyboard=True)
                markup_poll.add(types.KeyboardButton(text='–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç‚úÖ'))

                diet_bot.send_message(callback.message.chat.id, '–ï—Å–ª–∏ –≤—ã —É–∂–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ —Ç–µ—Å—Ç:', reply_markup=markup_menu)
                diet_bot.send_message(callback.message.chat.id,
                                      '–ò–ª–∏ –º–æ–∂–µ—Ç–µ –ø—Ä–æ–π—Ç–∏ –µ–≥–æ, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–πÔ∏èüëá',
                                      reply_markup=markup_poll)

        except mysql.connector.errors.IntegrityError as e:
            print(e)
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –º–µ–Ω—é
    if callback.data == 'menu':
        menu_list = types.InlineKeyboardMarkup(row_width=3)
        breakfast = types.InlineKeyboardButton(text='–ó–∞–≤—Ç—Ä–∞–∫üç≥', callback_data='breakfast')
        lunch = types.InlineKeyboardButton(text='–û–±–µ–¥üçú', callback_data='lunch')
        dinner = types.InlineKeyboardButton(text='–£–∂–∏–Ωüçù', callback_data='dinner')
        menu_list.row(breakfast, lunch, dinner)

        mess = diet_bot.send_message(callback.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—ë–º –ø–∏—â–∏, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–ª—é–¥–∞",
                                     reply_markup=menu_list)
        diet[callback.from_user.id] = {'mess_id': mess.message_id}

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –∑–∞–≤—Ç—Ä–∞–∫
    if callback.data == 'breakfast':
        with connect(
                host=getenv('HOST'),
                user=getenv('USER'),
                database=getenv('DATABASE'),
                port=getenv('PORT'),
                password=getenv('PASSWORD')
        ) as connection:
            table = f'''SELECT `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`,
                        `11`, `12` FROM answer_variant WHERE User_answer_ID = {callback.from_user.id}'''
            with connection.cursor() as cursor:
                cursor.execute(table)
                answs = cursor.fetchall()[0]
                print(answs)

        with connect(
                host=getenv('HOST'),
                user=getenv('USER'),
                database=getenv('DATABASE'),
                port=getenv('PORT'),
                password=getenv('PASSWORD')
        ) as connection:
            table = f'''SELECT * FROM tables'''
            with connection.cursor() as cursor:
                cursor.execute(table)
                tables = cursor.fetchall()
                tables_w_numb = {}
                for table in tables:
                    tables_w_numb[table[0]] = table[1::]
                print(tables_w_numb)
        if answs in tables_w_numb.values():
            table_numb = next(
                key for key, value in tables_w_numb.items() if value == answs)  # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª—é—á–∞ –∏–∑ —Å–ª–æ–≤–∞—Ä—è

            # –í—ã–±–æ—Ä –±–ª—é–¥, —É –∫–æ—Ç–æ—Ä—ã—Ö —Ç–∏–ø –∑–∞–≤—Ç—Ä–∞–∫ –∏ –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ —Å—Ç–æ–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            dishes_menu = 'üç≥–í–∞—à–∏ –±–ª—é–¥–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞–∫:\n'
            with connect(
                    host=getenv('HOST'),
                    user=getenv('USER'),
                    database=getenv('DATABASE'),
                    port=getenv('PORT'),
                    password=getenv('PASSWORD')
            ) as connection:
                select_dishes_query = f'''SELECT dishes.Name FROM dishes 
                    JOIN menu_dishes ON menu_dishes.Dishes_id = dishes.DISHES_ID 
                    JOIN meal_types ON dishes.Meal_type = meal_types.id
                    WHERE menu_dishes.Tables_id = {table_numb} AND meal_types.id = 1'''
                with connection.cursor() as cursor:
                    cursor.execute(select_dishes_query)
                    result = cursor.fetchall()
                    for i in result:
                        dishes_menu += 'üç¥' + i[0] + '\n'

            back_markup = types.InlineKeyboardMarkup()
            back_markup.add(types.InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é', callback_data='back'))
            # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –Ω–∞ –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫ –±–ª—é–¥ —Å—Ç–æ–ª–∞
            diet_bot.edit_message_text(chat_id=callback.message.chat.id,
                                       message_id=diet[callback.from_user.id]['mess_id'], text=dishes_menu,
                                       reply_markup=back_markup)

        else:
            dishes_menu = 'üç≥–í–∞—à–∏ –±–ª—é–¥–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞–∫:\n'
            with connect(
                    host=getenv('HOST'),
                    user=getenv('USER'),
                    database=getenv('DATABASE'),
                    port=getenv('PORT'),
                    password=getenv('PASSWORD')
            ) as connection:
                select_dishes_query = f'''SELECT Name FROM dishes 
                    JOIN meal_types ON dishes.Meal_type = meal_types.id 
                    WHERE meal_types.id = 1'''
                with connection.cursor() as cursor:
                    cursor.execute(select_dishes_query)
                    result = cursor.fetchall()
                    for i in result:
                        dishes_menu += 'üç¥' + i[0] + '\n'

            back_markup = types.InlineKeyboardMarkup()
            back_markup.add(types.InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é', callback_data='back'))
            diet_bot.edit_message_text(chat_id=callback.message.chat.id,
                                       message_id=diet[callback.from_user.id]['mess_id'], text=dishes_menu,
                                       reply_markup=back_markup)

    if callback.data == 'lunch':
        with connect(
                host=getenv('HOST'),
                user=getenv('USER'),
                database=getenv('DATABASE'),
                port=getenv('PORT'),
                password=getenv('PASSWORD')
        ) as connection:
            table = f'''SELECT `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`,
                        `11`, `12` FROM answer_variant WHERE User_answer_ID = {callback.from_user.id}'''
            with connection.cursor() as cursor:
                cursor.execute(table)
                answs = cursor.fetchall()[0]
                print(answs)

        with connect(
                host=getenv('HOST'),
                user=getenv('USER'),
                database=getenv('DATABASE'),
                port=getenv('PORT'),
                password=getenv('PASSWORD')
        ) as connection:
            table = f'''SELECT * FROM tables'''
            with connection.cursor() as cursor:
                cursor.execute(table)
                tables = cursor.fetchall()
                tables_w_numb = {}
                for table in tables:
                    tables_w_numb[table[0]] = table[1::]
                print(tables_w_numb)
        if answs in tables_w_numb.values():
            table_numb = next(
                key for key, value in tables_w_numb.items() if value == answs)  # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª—é—á–∞ –∏–∑ —Å–ª–æ–≤–∞—Ä—è

            dishes_menu = 'üçú–í–∞—à–∏ –±–ª—é–¥–∞ –Ω–∞ –æ–±–µ–¥:\n'
            with connect(
                    host=getenv('HOST'),
                    user=getenv('USER'),
                    database=getenv('DATABASE'),
                    port=getenv('PORT'),
                    password=getenv('PASSWORD')
            ) as connection:
                select_dishes_query = f'''SELECT dishes.Name FROM dishes 
                    JOIN menu_dishes ON menu_dishes.Dishes_id = dishes.DISHES_ID 
                    JOIN meal_types ON dishes.Meal_type = meal_types.id
                    WHERE menu_dishes.Tables_id = {table_numb} AND meal_types.id = 2'''
                with connection.cursor() as cursor:
                    cursor.execute(select_dishes_query)
                    result = cursor.fetchall()
                    for i in result:
                        dishes_menu += 'üç¥' + i[0] + '\n'

            back_markup = types.InlineKeyboardMarkup()
            back_markup.add(types.InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é', callback_data='back'))
            diet_bot.edit_message_text(chat_id=callback.message.chat.id,
                                       message_id=diet[callback.from_user.id]['mess_id'], text=dishes_menu,
                                       reply_markup=back_markup)

        else:
            dishes_menu = 'üçú–í–∞—à–∏ –±–ª—é–¥–∞ –Ω–∞ –æ–±–µ–¥:\n'
            with connect(
                    host=getenv('HOST'),
                    user=getenv('USER'),
                    database=getenv('DATABASE'),
                    port=getenv('PORT'),
                    password=getenv('PASSWORD')
            ) as connection:
                select_dishes_query = f'''SELECT Name FROM dishes 
                    JOIN meal_types ON dishes.Meal_type = meal_types.id 
                    WHERE meal_types.id = 2'''
                with connection.cursor() as cursor:
                    cursor.execute(select_dishes_query)
                    result = cursor.fetchall()
                    for i in result:
                        dishes_menu += 'üç¥' + i[0] + '\n'

            back_markup = types.InlineKeyboardMarkup()
            back_markup.add(types.InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é', callback_data='back'))
            diet_bot.edit_message_text(chat_id=callback.message.chat.id,
                                       message_id=diet[callback.from_user.id]['mess_id'], text=dishes_menu,
                                       reply_markup=back_markup)

    if callback.data == 'dinner':
        with connect(
                host=getenv('HOST'),
                user=getenv('USER'),
                database=getenv('DATABASE'),
                port=getenv('PORT'),
                password=getenv('PASSWORD')
        ) as connection:
            table = f'''SELECT `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`,
                        `11`, `12` FROM answer_variant WHERE User_answer_ID = {callback.from_user.id}'''
            with connection.cursor() as cursor:
                cursor.execute(table)
                answs = cursor.fetchall()[0]
                print(answs)

        with connect(
                host=getenv('HOST'),
                user=getenv('USER'),
                database=getenv('DATABASE'),
                port=getenv('PORT'),
                password=getenv('PASSWORD')
        ) as connection:
            table = f'''SELECT * FROM tables'''
            with connection.cursor() as cursor:
                cursor.execute(table)
                tables = cursor.fetchall()
                tables_w_numb = {}
                for table in tables:
                    tables_w_numb[table[0]] = table[1::]
                print(tables_w_numb)
        if answs in tables_w_numb.values():
            table_numb = next(
                key for key, value in tables_w_numb.items() if value == answs)  # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–ª—é—á–∞ –∏–∑ —Å–ª–æ–≤–∞—Ä—è

            dishes_menu = 'üçù–í–∞—à–∏ –±–ª—é–¥–∞ –Ω–∞ —É–∂–∏–Ω:\n'
            with connect(
                    host=getenv('HOST'),
                    user=getenv('USER'),
                    database=getenv('DATABASE'),
                    port=getenv('PORT'),
                    password=getenv('PASSWORD')
            ) as connection:
                select_dishes_query = f'''SELECT dishes.Name FROM dishes 
                    JOIN menu_dishes ON menu_dishes.Dishes_id = dishes.DISHES_ID 
                    JOIN meal_types ON dishes.Meal_type = meal_types.id
                    WHERE menu_dishes.Tables_id = {table_numb} AND meal_types.id = 3'''
                with connection.cursor() as cursor:
                    cursor.execute(select_dishes_query)
                    result = cursor.fetchall()
                    for i in result:
                        dishes_menu += 'üç¥' + i[0] + '\n'

            back_markup = types.InlineKeyboardMarkup()
            back_markup.add(types.InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é', callback_data='back'))
            diet_bot.edit_message_text(chat_id=callback.message.chat.id,
                                       message_id=diet[callback.from_user.id]['mess_id'], text=dishes_menu,
                                       reply_markup=back_markup)

        else:
            dishes_menu = 'üçù–í–∞—à–∏ –±–ª—é–¥–∞ –Ω–∞ —É–∂–∏–Ω:\n'
            with connect(
                    host=getenv('HOST'),
                    user=getenv('USER'),
                    database=getenv('DATABASE'),
                    port=getenv('PORT'),
                    password=getenv('PASSWORD')
            ) as connection:
                select_dishes_query = f'''SELECT Name FROM dishes 
                    JOIN meal_types ON dishes.Meal_type = meal_types.id 
                    WHERE meal_types.id = 3'''
                with connection.cursor() as cursor:
                    cursor.execute(select_dishes_query)
                    result = cursor.fetchall()
                    for i in result:
                        dishes_menu += 'üç¥' + i[0] + '\n'

            back_markup = types.InlineKeyboardMarkup()
            back_markup.add(types.InlineKeyboardButton(text='üîô–ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é', callback_data='back'))
            diet_bot.edit_message_text(chat_id=callback.message.chat.id,
                                       message_id=diet[callback.from_user.id]['mess_id'], text=dishes_menu,
                                       reply_markup=back_markup)

    if callback.data == 'back':
        menu_list = types.InlineKeyboardMarkup(row_width=3)
        breakfast = types.InlineKeyboardButton(text='–ó–∞–≤—Ç—Ä–∞–∫üç≥', callback_data='breakfast')
        lunch = types.InlineKeyboardButton(text='–û–±–µ–¥üçú', callback_data='lunch')
        dinner = types.InlineKeyboardButton(text='–£–∂–∏–Ωüçù', callback_data='dinner')
        menu_list.row(breakfast, lunch, dinner)

        diet_bot.edit_message_text(chat_id=callback.message.chat.id, message_id=diet[callback.from_user.id]['mess_id'],
                                   text="–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—ë–º –ø–∏—â–∏, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–ª—é–¥–∞", reply_markup=menu_list)


@diet_bot.message_handler(content_types=['text'])
def poll(message):
    global questions
    global diet
    global mess_id

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π
    if message.from_user.id not in diet:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑ –±–¥ –Ω–æ–º–µ—Ä–∞ –≤–æ–ø—Ä–æ—Å–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –æ–Ω –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –æ—Ç–≤–µ—Ç–∏–ª
        with connect(
                host=getenv('HOST'),
                user=getenv('USER'),
                database=getenv('DATABASE'),
                port=getenv('PORT'),
                password=getenv('PASSWORD')
        ) as connection:
            question_sql = f'''SELECT Question_number FROM users WHERE User_ID = {message.from_user.id}'''
            with connection.cursor() as cursor:
                cursor.execute(question_sql)
                quest = cursor.fetchall()[0][0]

        diet[message.from_user.id] = {'step': quest}
        q = questions[diet[message.from_user.id]['step']]

        poll_markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

        poll_markup.add(types.KeyboardButton('–î–∞'))
        poll_markup.add(types.KeyboardButton('–ù–µ—Ç'))

        diet_bot.send_message(message.chat.id, q, reply_markup=poll_markup)

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫ –Ω–æ–º–µ—Ä—É –≤–æ–ø—Ä–æ—Å–∞ 1 –≤ –±–¥
        with connect(
                host=getenv('HOST'),
                user=getenv('USER'),
                database=getenv('DATABASE'),
                port=getenv('PORT'),
                password=getenv('PASSWORD')
        ) as connection:
            question_sql = f'''UPDATE users SET Question_number = Question_number + 1 WHERE User_ID = {message.from_user.id}'''
            with connection.cursor() as cursor:
                cursor.execute(question_sql)
                connection.commit()

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å –≤ —Å–∏—Å—Ç–µ–º–µ
    elif message.from_user.id in diet:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        with connect(
                host=getenv('HOST'),
                user=getenv('USER'),
                database=getenv('DATABASE'),
                port=getenv('PORT'),
                password=getenv('PASSWORD')
        ) as connection:
            question_sql = f'''SELECT Question_number FROM users WHERE User_ID = {message.from_user.id}'''
            with connection.cursor() as cursor:
                cursor.execute(question_sql)
                diet[message.from_user.id]['step'] = cursor.fetchall()[0][0]

        with connect(
                host=getenv('HOST'),
                user=getenv('USER'),
                database=getenv('DATABASE'),
                port=getenv('PORT'),
                password=getenv('PASSWORD')
        ) as connection:
            question_sql = f'''UPDATE users SET Question_number = Question_number + 1 WHERE User_ID = {message.from_user.id}'''
            with connection.cursor() as cursor:
                cursor.execute(question_sql)
                connection.commit()

        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã
        if diet[message.from_user.id]['step'] == len(questions):
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—Ç–∏–ª –¥–∞, —Ç–æ –≤ –±–¥ –Ω–∞ –Ω–æ–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞ —Å—Ç–∞–≤–∏—Ç—å—Å—è 1, –∏–Ω–∞—á–µ - 0
            if message.text == '–î–∞':
                with connect(
                        host=getenv('HOST'),
                        user=getenv('USER'),
                        database=getenv('DATABASE'),
                        port=getenv('PORT'),
                        password=getenv('PASSWORD')
                ) as connection:
                    answ = f'''UPDATE answer_variant SET `{diet[message.from_user.id]['step']}` = 1 WHERE User_answer_ID = {message.from_user.id}'''
                    with connection.cursor() as cursor:
                        cursor.execute(answ)
                        connection.commit()

            elif message.text == '–ù–µ—Ç':
                with connect(
                        host=getenv('HOST'),
                        user=getenv('USER'),
                        database=getenv('DATABASE'),
                        port=getenv('PORT'),
                        password=getenv('PASSWORD')
                ) as connection:
                    answ = f'''UPDATE answer_variant SET `{diet[message.from_user.id]['step']}` = 0 WHERE User_answer_ID = {message.from_user.id}'''
                    with connection.cursor() as cursor:
                        cursor.execute(answ)
                        connection.commit()

            with connect(
                    host=getenv('HOST'),
                    user=getenv('USER'),
                    database=getenv('DATABASE'),
                    port=getenv('PORT'),
                    password=getenv('PASSWORD')
            ) as connection:
                table = f'''SELECT `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`,
                        `11`, `12` FROM answer_variant WHERE User_answer_ID = {message.from_user.id}'''
                with connection.cursor() as cursor:
                    cursor.execute(table)
                    answs = cursor.fetchall()[0]

            with connect(
                    host=getenv('HOST'),
                    user=getenv('USER'),
                    database=getenv('DATABASE'),
                    port=getenv('PORT'),
                    password=getenv('PASSWORD')
            ) as connection:
                table = f'''SELECT * FROM tables'''
                with connection.cursor() as cursor:
                    cursor.execute(table)
                    tables = cursor.fetchall()
                    tables_w_numb = {}
                    for table in tables:
                        tables_w_numb[table[0]] = table[1::]

            # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å–æ —Å—Ç–æ–ª–∞–º–∏, —Ç–æ –µ–º—É –≤—ã–≤–æ–¥–∏—Ç—Å—è —ç—Ç–æ—Ç —Å—Ç–æ–ª, –µ—Å–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç, —Ç–æ –≤—ã–≤–æ–¥—è—Ç—Å—è –≤—Å–µ –±–ª—é–¥–∞
            if answs not in tables_w_numb.values():
                # –û–±–Ω—É–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                with connect(
                        host=getenv('HOST'),
                        user=getenv('USER'),
                        database=getenv('DATABASE'),
                        port=getenv('PORT'),
                        password=getenv('PASSWORD')
                ) as connection:
                    question_sql = f'''UPDATE users SET Question_number = 0 WHERE User_ID = {message.from_user.id}'''
                    with connection.cursor() as cursor:
                        cursor.execute(question_sql)
                        connection.commit()

                try:
                    menu_list = types.InlineKeyboardMarkup(row_width=3)
                    breakfast = types.InlineKeyboardButton(text='–ó–∞–≤—Ç—Ä–∞–∫üç≥', callback_data='breakfast')
                    lunch = types.InlineKeyboardButton(text='–û–±–µ–¥üçú', callback_data='lunch')
                    dinner = types.InlineKeyboardButton(text='–£–∂–∏–Ωüçù', callback_data='dinner')
                    menu_list.row(breakfast, lunch, dinner)

                    mess = diet_bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—ë–º –ø–∏—â–∏, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–ª—é–¥–∞",
                                                 reply_markup=menu_list)
                    diet[message.from_user.id] = {'mess_id': mess.message_id}

                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    markup.add(types.InlineKeyboardButton(text='–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç —Å–Ω–æ–≤–∞‚úÖ'))
                    diet_bot.send_message(message.chat.id,
                                          '–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –µ—â—ë —Ä–∞–∑, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–πÔ∏èüëá',
                                          reply_markup=markup)

                except Error as e:
                    print(e)

            else:
                try:
                    menu_list = types.InlineKeyboardMarkup(row_width=3)
                    breakfast = types.InlineKeyboardButton(text='–ó–∞–≤—Ç—Ä–∞–∫üç≥', callback_data='breakfast')
                    lunch = types.InlineKeyboardButton(text='–û–±–µ–¥üçú', callback_data='lunch')
                    dinner = types.InlineKeyboardButton(text='–£–∂–∏–Ωüçù', callback_data='dinner')
                    menu_list.row(breakfast, lunch, dinner)

                    mess = diet_bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—ë–º –ø–∏—â–∏, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–ª—é–¥–∞",
                                                 reply_markup=menu_list)
                    diet[message.from_user.id] = {'mess_id': mess.message_id}

                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    markup.add(types.InlineKeyboardButton(text='–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç —Å–Ω–æ–≤–∞‚úÖ'))
                    diet_bot.send_message(message.chat.id,
                                          '–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –µ—â—ë —Ä–∞–∑, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–πÔ∏èüëá',
                                          reply_markup=markup)

                except Error as e:
                    print(e)
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â—ë –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã (–ø—Ä–æ—Ü–µ—Å—Å –æ–ø—Ä–æ—Å–∞)
        else:
            q = questions[diet[message.from_user.id]['step']]

            poll_markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

            poll_markup.add(types.KeyboardButton('–î–∞'))
            poll_markup.add(types.KeyboardButton('–ù–µ—Ç'))

            if message.text == '–î–∞':
                with connect(
                        host=getenv('HOST'),
                        user=getenv('USER'),
                        database=getenv('DATABASE'),
                        port=getenv('PORT'),
                        password=getenv('PASSWORD')
                ) as connection:
                    answ = f'''UPDATE answer_variant SET `{diet[message.from_user.id]['step']}` = 1 WHERE User_answer_ID = {message.from_user.id}'''
                    with connection.cursor() as cursor:
                        cursor.execute(answ)
                        connection.commit()

            elif message.text == '–ù–µ—Ç':
                # diet[message.from_user.id]['answs'].append(False)
                with connect(
                        host=getenv('HOST'),
                        user=getenv('USER'),
                        database=getenv('DATABASE'),
                        port=getenv('PORT'),
                        password=getenv('PASSWORD')
                ) as connection:
                    answ = f'''UPDATE answer_variant SET `{diet[message.from_user.id]['step']}` = 0 WHERE User_answer_ID = {message.from_user.id}'''
                    with connection.cursor() as cursor:
                        cursor.execute(answ)
                        connection.commit()

            diet_bot.send_message(message.chat.id, q, reply_markup=poll_markup)


diet_bot.infinity_polling()
